using System;
using System.Collections.Generic;

namespace SortStringsByLength
{
    class SortStringsByLength
    {
        static void Main()
        {
            List<string> words = new List<string>() { "Kosymcheto", "Djaro", "Kosio", "Kliment", "Kiril", "Kukata", "Joro", "Miladincho", "Marko" };
            List<string> sortedList = Sort(words);

            foreach (string word in sortedList)
            {
                Console.WriteLine(word);
            }
        }

        private static List<string> Sort(List<string> array)
        {
            if (array.Count <= 1)
            {
                return array;
            }

            string pivot = array[array.Count / 2];
            int pivotLength = pivot.Length;

            List<string> left = new List<string>();
            List<string> right = new List<string>();

            for (int i = 0; i < array.Count; i++)
            {
                if (String.Compare(array[i], pivot) != 0)
                {
                    if (array[i].Length <= pivotLength)
                    {
                        left.Add(array[i]);
                    }
                    else
                    {
                        right.Add(array[i]);
                    }
                }
            }

            return ConcatenateLists(Sort(left), pivot, Sort(right));
        }

        private static List<string> ConcatenateLists(List<string> left, string pivot, List<string> right)
        {
            List<string> concatenated = new List<string>();

            for (int i = 0; i < left.Count; i++)
            {
                concatenated.Add(left[i]);
            }

            concatenated.Add(pivot);

            for (int j = 0; j < right.Count; j++)
            {
                concatenated.Add(right[j]);
            }

            return concatenated;
        }
    }
}
